// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// waterbalance
NumericVector waterbalance(NumericVector calvals, NumericMatrix data, std::string out, std::string rsnowpart);
RcppExport SEXP _CSHShydRology_waterbalance(SEXP calvalsSEXP, SEXP dataSEXP, SEXP outSEXP, SEXP rsnowpartSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type calvals(calvalsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< std::string >::type out(outSEXP);
    Rcpp::traits::input_parameter< std::string >::type rsnowpart(rsnowpartSEXP);
    rcpp_result_gen = Rcpp::wrap(waterbalance(calvals, data, out, rsnowpart));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CSHShydRology_waterbalance", (DL_FUNC) &_CSHShydRology_waterbalance, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_CSHShydRology(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
